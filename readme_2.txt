1. В чому полягає різниця між ключовими та зарезервованими словами?
1.Ключові слова — це спеціальні слова, які мають особливе значення в мові програмування і не можуть бути використані як імена змінних (наприклад, if, while).
Зарезервовані слова можуть бути зарезервованими для майбутніх використань, але поки не мають спеціального значення (наприклад, goto в Java).
2. Які примітивні типи даних Ви знаєте? Для кожного з них наведіть приклади, коли найбільш ефективно використовувати саме цей тип (наприклад: довжина файлу, кількість зірок на небі, рахунок у футбольному матчі, маса всесвіту, заробітна платня, ...).
2. Примітивні типи даних:
    byte (1 байт) — для економії пам'яті, коли потрібен маленький діапазон значень (наприклад, кількість сторінок у книзі).
    short (2 байти) — для невеликих чисел (наприклад, рахунок у спортивній грі).
    int (4 байти) — для цілих чисел (наприклад, населення міста).
    long (8 байт) — для великих чисел (наприклад, маса всесвіту).
    float (4 байти) — для чисел з плаваючою точкою, коли точність не критична (наприклад, температура води).
    double (8 байт) — для більш точних обчислень з плаваючою точкою (наприклад, гравітаційна стала).
    char (2 байти) — для зберігання символів.
    boolean (1 біт) — для логічних значень (наприклад, істинність або хибність умов).
3. Що таке знакові та беззнакові типи? До якої групи відноситься кожен з примітивних типів даних?
3.Знакові типи можуть містити як позитивні, так і негативні числа (byte, short, int, long). Беззнакові типи містять лише позитивні числа. У Java всі числові типи є знаковими.
4. Яке максимальне число можна записати у змінну типу short, char, int, long? 
4. Максимальні значення:
    short: 32,767
    char: 65,535
    int: 2,147,483,647
    long: 9,223,372,036,854,775,807
5. Змінна типу byte може приймати значення у діапазоні -128..127. Чому цей діапазон саме такий? Чому від’ємних значень більше ніж додатних?
5. byte може приймати значення від -128 до 127, бо він має 8 біт (1 байт), а з них один біт відповідає за знак числа. Від’ємних значень більше, тому що нуль рахується як позитивне число.
6. Що таке система числення? Як переводити значення з однієї системи числення у іншу?
6.Система числення — це спосіб запису чисел (наприклад, десяткова, двійкова). Переведення здійснюється за допомогою ділення на базу нової системи і запису залишків.
7. Що таке «Доповняльний код»? 
7.Доповняльний код — це спосіб представлення від'ємних чисел у комп'ютері, де старший біт використовується для позначення знака.
8. Пояснити результат роботи такого фрагмента коду:

int a = 2_000_000_000;
int b = 2_000_000_000;
int c = a + b;
System.out.println(c);
8.Результат: -294967296. Це пояснюється переповненням змінної типу int, оскільки сума двох великих чисел перевищує максимальне значення для типу int.
9. Чим тип float відрізняється від double?
9.float займає 4 байти і має меншу точність порівняно з double, який займає 8 байт і дає точніші результати.
10. Що таке число з рухомою комою? Що таке мантиса та степінь?
10.Число з рухомою комою — це спосіб зберігання чисел, що складаються з мантиси і порядку. Мантиса — це основна частина числа, порядок — це показник степеня числа.
11. Що таке Double.NaN?
11.Double.NaN — це спеціальне значення, що позначає результат математичної операції, яка не дає визначеного результату (наприклад, 0/0).
12. Пояснити результат роботи такого фрагменту коду:
System.out.println(Double.NaN==Double.NaN);
12. Результат: false, оскільки NaN не дорівнює самому собі за стандартом IEEE.
13. Пояснити різницю між преінкрементом та постінкрементом. Навести приклади, коли ці операції призводять до різних результатів.
13.Преінкремент (++a) збільшує значення змінної перед використанням. Постінкремент (a++) збільшує після використання. Вони дають різні результати при участі в складних виразах.
14. В чому різниця між логічною та побітовою операцією AND? Чому звичайна операція AND (&) є в обох варіантах, а її короткозамкнута версія (&&) лише тільки логічна?
14. Логічна операція AND (&&) виконує перевірку лише за необхідності (короткозамкнута), побітова AND (&) перевіряє всі біти.
15. В чому різниця між OR та XOR?
15. OR повертає true, якщо хоча б один операнд істинний. XOR повертає true, лише якщо операнди різні.
16. Проаналізувати наступний фрагмент програми. Передбачити його результат. Запустити. Пояснити.
 boolean a = true && false | false;
 System.out.println(a = false);
        
boolean b = true && false || false;
System.out.println(b = true);
16.    Результат:

    a = false: виведе false, оскільки результат обчислень присвоюється змінній.
    b = true: виведе true, оскільки результат обчислення умови є true.




